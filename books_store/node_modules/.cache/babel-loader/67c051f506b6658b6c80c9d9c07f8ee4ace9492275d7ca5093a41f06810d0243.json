{"ast":null,"code":"var _jsxFileName = \"/Users/JayBhim-Kunal/Desktop/MERN Projects/BookStore/frontend/books_store/src/pages/PasswordReset.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const forgetPassformik = useFormik({\n    initialValues: {\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    validate: logInValidate2,\n    validateOnBlur: false,\n    validateOnChange: false,\n    onSubmit: async values => {\n      fetch(`http://localhost:5555/login/forgot-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: values.email\n        })\n      });\n      toast(\"Password Reset Link sent to your Registered Email\");\n      LogInModule();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"welcome\",\n      children: \"WELCOME - TO - LIBRARY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: forgetPassformik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textfield\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            display: passwordBlock\n          },\n          ...forgetPassformik.getFieldProps(\"password\"),\n          fullWidth: true,\n          label: \"Enter New Password\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textfield\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            display: passwordBlock\n          },\n          ...forgetPassformik.getFieldProps(\"conPassword\"),\n          fullWidth: true,\n          label: \"Confirm New Password\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button\n      // onClick={NavigateToMainPage}\n      , {\n        type: \"submit\",\n        fullWidth: true,\n        className: \"btn_In\",\n        variant: \"contained\"\n        // style={{ marginTop: \"2%\", display: PassUpdateBtn }}\n        ,\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"TOodkCnJUDutrKj0lS5bNLiCdDw=\", true);\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PasswordReset","_s","forgetPassformik","useFormik","initialValues","password","confirmPassword","validate","logInValidate2","validateOnBlur","validateOnChange","onSubmit","values","fetch","method","headers","body","JSON","stringify","email","toast","LogInModule","children","className","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","TextField","style","display","passwordBlock","getFieldProps","fullWidth","label","id","Button","type","variant","_c","$RefreshReg$"],"sources":["/Users/JayBhim-Kunal/Desktop/MERN Projects/BookStore/frontend/books_store/src/pages/PasswordReset.js"],"sourcesContent":["import React from \"react\";\n\nconst PasswordReset = () => {\n\n    const forgetPassformik = useFormik({\n        initialValues: {\n          password: \"\",\n          confirmPassword: \"\"\n        },\n        validate: logInValidate2,\n        validateOnBlur: false,\n        validateOnChange: false,\n        onSubmit: async (values) => {\n          fetch(`http://localhost:5555/login/forgot-password`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({email: values.email}),\n          })\n          toast(\"Password Reset Link sent to your Registered Email\");\n          LogInModule();\n        },\n      });\n\n  return (\n    <div>\n      <p className=\"welcome\">WELCOME - TO - LIBRARY</p>\n      <form onSubmit={forgetPassformik.handleSubmit}>\n        <div className=\"textfield\">\n          <TextField\n            style={{ display: passwordBlock }}\n            {...forgetPassformik.getFieldProps(\"password\")}\n            fullWidth\n            label=\"Enter New Password\"\n            id=\"fullWidth\"\n          />\n        </div>\n        <div className=\"textfield\">\n          <TextField\n            style={{ display: passwordBlock }}\n            {...forgetPassformik.getFieldProps(\"conPassword\")}\n            fullWidth\n            label=\"Confirm New Password\"\n            id=\"fullWidth\"\n          />\n        </div>\n        <Button\n          // onClick={NavigateToMainPage}\n          type=\"submit\"\n          fullWidth\n          className=\"btn_In\"\n          variant=\"contained\"\n          // style={{ marginTop: \"2%\", display: PassUpdateBtn }}\n        >\n          Update Password\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordReset;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAMC,gBAAgB,GAAGC,SAAS,CAAC;IAC/BC,aAAa,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE;IACnB,CAAC;IACDC,QAAQ,EAAEC,cAAc;IACxBC,cAAc,EAAE,KAAK;IACrBC,gBAAgB,EAAE,KAAK;IACvBC,QAAQ,EAAE,MAAOC,MAAM,IAAK;MAC1BC,KAAK,CAAE,6CAA4C,EAAE;QACnDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACC,KAAK,EAAEP,MAAM,CAACO;QAAK,CAAC;MAC5C,CAAC,CAAC;MACFC,KAAK,CAAC,mDAAmD,CAAC;MAC1DC,WAAW,CAAC,CAAC;IACf;EACF,CAAC,CAAC;EAEN,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAGwB,SAAS,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAsB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjD5B,OAAA;MAAMY,QAAQ,EAAET,gBAAgB,CAAC0B,YAAa;MAAAN,QAAA,gBAC5CvB,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxBvB,OAAA,CAAC8B,SAAS;UACRC,KAAK,EAAE;YAAEC,OAAO,EAAEC;UAAc,CAAE;UAAA,GAC9B9B,gBAAgB,CAAC+B,aAAa,CAAC,UAAU,CAAC;UAC9CC,SAAS;UACTC,KAAK,EAAC,oBAAoB;UAC1BC,EAAE,EAAC;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAKwB,SAAS,EAAC,WAAW;QAAAD,QAAA,eACxBvB,OAAA,CAAC8B,SAAS;UACRC,KAAK,EAAE;YAAEC,OAAO,EAAEC;UAAc,CAAE;UAAA,GAC9B9B,gBAAgB,CAAC+B,aAAa,CAAC,aAAa,CAAC;UACjDC,SAAS;UACTC,KAAK,EAAC,sBAAsB;UAC5BC,EAAE,EAAC;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA,CAACsC;MACC;MAAA;QACAC,IAAI,EAAC,QAAQ;QACbJ,SAAS;QACTX,SAAS,EAAC,QAAQ;QAClBgB,OAAO,EAAC;QACR;QAAA;QAAAjB,QAAA,EACD;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxDID,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AA0DnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}