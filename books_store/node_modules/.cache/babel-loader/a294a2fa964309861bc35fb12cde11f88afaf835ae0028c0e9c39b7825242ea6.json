{"ast":null,"code":"import toast from \"react-hot-toast\";\n\n/**Validate Registration Page  */\nexport async function logInValidate1(values) {\n  const emailList = await fetch(\"http://localhost:5555/login/listofemail\", {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const emailJsonList = await emailList.json();\n  console.log;\n  const error = logInVerify({}, values, emailJsonList);\n  return error;\n}\n\n/** LogIn Validation */\nfunction logInVerify(error = {}, values, emailJsonList) {\n  if (!values.name) {\n    error = toast.error(\"Name Required..... !\");\n  } else if (!values.email) {\n    error = toast.error(\"Email Required..... !\");\n  } else if (values.email.includes(\" \")) {\n    error = toast.error(\"Invalid Email....!\");\n  } else if (emailJsonList.includes(values.email)) {\n    error = toast.error(\"Email already registered....!\");\n  } else if (values.mobile.includes(\" \")) {\n    error = toast.error(\"Invalid Mobile No.....!\");\n  } else if (!values.mobile) {\n    error = toast.error(\"Mobile no. Required....!\");\n  } else if (!values.password) {\n    error = toast.error(\"Password Required....!\");\n  } else if (values.password.includes(\" \")) {\n    error = toast.error(\"Invalid Password....!\");\n  } else if (!values.conpassword) {\n    error = toast.error(\"Password Required....!\");\n  } else if (values.conpassword.includes(\" \")) {\n    error = toast.error(\"Invalid Confirm Password....!\");\n  } else if (values.password !== values.conpassword) {\n    error = toast.error(\"Confirm Password not match with Password\");\n  }\n  return error;\n}","map":{"version":3,"names":["toast","logInValidate1","values","emailList","fetch","method","headers","emailJsonList","json","console","log","error","logInVerify","name","email","includes","mobile","password","conpassword"],"sources":["/Users/JayBhim-Kunal/Desktop/MERN Projects/BookStore/frontend/books_store/src/helper/validate1.js"],"sourcesContent":["import toast from \"react-hot-toast\";\n\n/**Validate Registration Page  */\nexport async function logInValidate1(values) {\n  const emailList = await fetch(\"http://localhost:5555/login/listofemail\", {\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n  const emailJsonList = await emailList.json();\n  console.log\n  const error = logInVerify({}, values, emailJsonList);\n\n  return error;\n}\n\n/** LogIn Validation */\nfunction logInVerify(error = {}, values, emailJsonList) {\n  if (!values.name) {\n    error = toast.error(\"Name Required..... !\");\n  } else if (!values.email) {\n    error = toast.error(\"Email Required..... !\");\n  } else if (values.email.includes(\" \")) {\n    error = toast.error(\"Invalid Email....!\");\n  } else if (emailJsonList.includes(values.email)) {\n    error = toast.error(\"Email already registered....!\");\n  } else if (values.mobile.includes(\" \")) {\n    error = toast.error(\"Invalid Mobile No.....!\");\n  } else if (!values.mobile) {\n    error = toast.error(\"Mobile no. Required....!\");\n  } else if (!values.password) {\n    error = toast.error(\"Password Required....!\");\n  } else if (values.password.includes(\" \")) {\n    error = toast.error(\"Invalid Password....!\");\n  } else if (!values.conpassword) {\n    error = toast.error(\"Password Required....!\");\n  } else if (values.conpassword.includes(\" \")) {\n    error = toast.error(\"Invalid Confirm Password....!\");\n  } else if (values.password !== values.conpassword) {\n    error = toast.error(\"Confirm Password not match with Password\");\n  }\n\n  return error;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAEnC;AACA,OAAO,eAAeC,cAAcA,CAACC,MAAM,EAAE;EAC3C,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;IACvEC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC,CAAC;EACF,MAAMC,aAAa,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,CAAC;EAC5CC,OAAO,CAACC,GAAG;EACX,MAAMC,KAAK,GAAGC,WAAW,CAAC,CAAC,CAAC,EAAEV,MAAM,EAAEK,aAAa,CAAC;EAEpD,OAAOI,KAAK;AACd;;AAEA;AACA,SAASC,WAAWA,CAACD,KAAK,GAAG,CAAC,CAAC,EAAET,MAAM,EAAEK,aAAa,EAAE;EACtD,IAAI,CAACL,MAAM,CAACW,IAAI,EAAE;IAChBF,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,sBAAsB,CAAC;EAC7C,CAAC,MAAM,IAAI,CAACT,MAAM,CAACY,KAAK,EAAE;IACxBH,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EAC9C,CAAC,MAAM,IAAIT,MAAM,CAACY,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACrCJ,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,oBAAoB,CAAC;EAC3C,CAAC,MAAM,IAAIJ,aAAa,CAACQ,QAAQ,CAACb,MAAM,CAACY,KAAK,CAAC,EAAE;IAC/CH,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,+BAA+B,CAAC;EACtD,CAAC,MAAM,IAAIT,MAAM,CAACc,MAAM,CAACD,QAAQ,CAAC,GAAG,CAAC,EAAE;IACtCJ,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,yBAAyB,CAAC;EAChD,CAAC,MAAM,IAAI,CAACT,MAAM,CAACc,MAAM,EAAE;IACzBL,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,0BAA0B,CAAC;EACjD,CAAC,MAAM,IAAI,CAACT,MAAM,CAACe,QAAQ,EAAE;IAC3BN,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,wBAAwB,CAAC;EAC/C,CAAC,MAAM,IAAIT,MAAM,CAACe,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAE;IACxCJ,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,uBAAuB,CAAC;EAC9C,CAAC,MAAM,IAAI,CAACT,MAAM,CAACgB,WAAW,EAAE;IAC9BP,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,wBAAwB,CAAC;EAC/C,CAAC,MAAM,IAAIT,MAAM,CAACgB,WAAW,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC3CJ,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,+BAA+B,CAAC;EACtD,CAAC,MAAM,IAAIT,MAAM,CAACe,QAAQ,KAAKf,MAAM,CAACgB,WAAW,EAAE;IACjDP,KAAK,GAAGX,KAAK,CAACW,KAAK,CAAC,0CAA0C,CAAC;EACjE;EAEA,OAAOA,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}