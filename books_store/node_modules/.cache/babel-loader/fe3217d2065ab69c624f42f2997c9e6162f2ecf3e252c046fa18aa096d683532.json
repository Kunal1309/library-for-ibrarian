{"ast":null,"code":"import toast from 'react-hot-toast';\n\n/**Validate Log in Page  */\nexport async function logInValidate1(values) {\n  const error = logInVerify({}, values);\n  return error;\n}\n\n/** LogIn Validation */\nfunction logInVerify(error = {}, values) {\n  if (!values.name) {\n    error = toast.error(\"Name Required..... !\");\n  } else if (!values.email) {\n    error = toast.error(\"Email Required..... !\");\n  } else if (values.email.includes(\" \")) {\n    error = toast.error(\"Invalid Email....!\");\n  } else if (values.mobile.includes(\" \")) {\n    error = toast.error(\"Invalid Mobile No.....!\");\n  } else if (!values.mobile) {\n    error = toast.error(\"Mobile no. Required....!\");\n  } else if (!values.password) {\n    error = toast.error(\"Password Required....!\");\n  } else if (values.password.includes(\" \")) {\n    error = toast.error(\"Invalid Password....!\");\n  } else if (!values.conpassword) {\n    error = toast.error(\"Password Required....!\");\n  } else if (values.conpassword.includes(\" \")) {\n    error = toast.error(\"Invalid Confirm Password....!\");\n  } else return error;\n}","map":{"version":3,"names":["toast","logInValidate1","values","error","logInVerify","name","email","includes","mobile","password","conpassword"],"sources":["/Users/JayBhim-Kunal/Desktop/MERN Projects/BookStore/frontend/books_store/src/helper/validate1.js"],"sourcesContent":["import toast from 'react-hot-toast';\n\n/**Validate Log in Page  */\nexport async function logInValidate1(values){\n    const error = logInVerify({}, values);\n\n    return error;\n}\n\n\n\n/** LogIn Validation */\nfunction logInVerify(error={}, values) {\n    if(!values.name){\n        error = toast.error(\"Name Required..... !\")\n    }else if(!values.email){\n        error = toast.error(\"Email Required..... !\")\n    }else if(values.email.includes(\" \")){\n        error = toast.error(\"Invalid Email....!\")\n    }else if(values.mobile.includes(\" \")){\n        error = toast.error(\"Invalid Mobile No.....!\")\n    }else if(!values.mobile){\n        error = toast.error(\"Mobile no. Required....!\")\n    }else if(!values.password){\n        error = toast.error(\"Password Required....!\")\n    }else if(values.password.includes(\" \")){\n        error = toast.error(\"Invalid Password....!\")\n    }else if(!values.conpassword){\n        error = toast.error(\"Password Required....!\")\n    }else if(values.conpassword.includes(\" \")){\n        error = toast.error(\"Invalid Confirm Password....!\")\n    }else\n\n    return error;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,iBAAiB;;AAEnC;AACA,OAAO,eAAeC,cAAcA,CAACC,MAAM,EAAC;EACxC,MAAMC,KAAK,GAAGC,WAAW,CAAC,CAAC,CAAC,EAAEF,MAAM,CAAC;EAErC,OAAOC,KAAK;AAChB;;AAIA;AACA,SAASC,WAAWA,CAACD,KAAK,GAAC,CAAC,CAAC,EAAED,MAAM,EAAE;EACnC,IAAG,CAACA,MAAM,CAACG,IAAI,EAAC;IACZF,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,sBAAsB,CAAC;EAC/C,CAAC,MAAK,IAAG,CAACD,MAAM,CAACI,KAAK,EAAC;IACnBH,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,uBAAuB,CAAC;EAChD,CAAC,MAAK,IAAGD,MAAM,CAACI,KAAK,CAACC,QAAQ,CAAC,GAAG,CAAC,EAAC;IAChCJ,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,oBAAoB,CAAC;EAC7C,CAAC,MAAK,IAAGD,MAAM,CAACM,MAAM,CAACD,QAAQ,CAAC,GAAG,CAAC,EAAC;IACjCJ,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,yBAAyB,CAAC;EAClD,CAAC,MAAK,IAAG,CAACD,MAAM,CAACM,MAAM,EAAC;IACpBL,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,0BAA0B,CAAC;EACnD,CAAC,MAAK,IAAG,CAACD,MAAM,CAACO,QAAQ,EAAC;IACtBN,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,wBAAwB,CAAC;EACjD,CAAC,MAAK,IAAGD,MAAM,CAACO,QAAQ,CAACF,QAAQ,CAAC,GAAG,CAAC,EAAC;IACnCJ,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,uBAAuB,CAAC;EAChD,CAAC,MAAK,IAAG,CAACD,MAAM,CAACQ,WAAW,EAAC;IACzBP,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,wBAAwB,CAAC;EACjD,CAAC,MAAK,IAAGD,MAAM,CAACQ,WAAW,CAACH,QAAQ,CAAC,GAAG,CAAC,EAAC;IACtCJ,KAAK,GAAGH,KAAK,CAACG,KAAK,CAAC,+BAA+B,CAAC;EACxD,CAAC,MAED,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}